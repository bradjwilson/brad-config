diff --git a/init.lua b/init.lua
index 1bd68b0..600de27 100644
--- a/init.lua
+++ b/init.lua
@@ -6,6 +6,7 @@ require "user.colorscheme"
 require "user.cmp"
 require "user.telescope"
 require "user.treesitter"
+require "user.cmake"
 require "user.autopairs"
 require "user.comment"
 require "user.gitsigns"
diff --git a/lua/user/alpha.lua b/lua/user/alpha.lua
index 9fe9d2f..6226268 100644
--- a/lua/user/alpha.lua
+++ b/lua/user/alpha.lua
@@ -3,15 +3,23 @@ if not status_ok then
   return
 end
 
+
 local dashboard = require "alpha.themes.dashboard"
 dashboard.section.header.val = {
-  [[                               __                ]],
-  [[  ___     ___    ___   __  __ /\_\    ___ ___    ]],
-  [[ / _ `\  / __`\ / __`\/\ \/\ \\/\ \  / __` __`\  ]],
-  [[/\ \/\ \/\  __//\ \_\ \ \ \_/ |\ \ \/\ \/\ \/\ \ ]],
-  [[\ \_\ \_\ \____\ \____/\ \___/  \ \_\ \_\ \_\ \_\]],
-  [[ \/_/\/_/\/____/\/___/  \/__/    \/_/\/_/\/_/\/_/]],
+[[                   .-.     /\     /\              ]],
+[[                  / /     {  `---'  }             ]],
+[[                 / |      {  O   O  }             ]],
+[[   |\     ._ ,-""  `.     ~~>  V  <~~             ]],
+[[   | |,,_/  7        ;     \  \|/  /              ]],
+[[ `;=     ,=(     ,  /       `-----'__             ]],
+[[  |`q  q  ` |    \_,|       /     \  `^\_         ]],
+[[ .=; <> _ ; /  ,/'/ |      {       }\ |\_\_   _   ]],
+[[';|\,j_ \;=\ ,/   `-'      |  \_/  |/ /  \_\_/ )  ]],
+[[    `--'_|\  )              \__/  /(,/     \__/   ]],
+[[   ,' | /  ;'                 (,,/                ]],
+[[  (,,/ (,,/                                       ]],
 }
+
 dashboard.section.buttons.val = {
   dashboard.button("f", " " .. " Find file", ":Telescope find_files <CR>"),
   dashboard.button("e", " " .. " New file", ":ene <BAR> startinsert <CR>"),
@@ -22,7 +30,7 @@ dashboard.section.buttons.val = {
   dashboard.button("q", " " .. " Quit", ":qa<CR>"),
 }
 local function footer()
-  return "chrisatmachine.com"
+  return "Cats > Dogs"
 end
 
 dashboard.section.footer.val = footer()
diff --git a/lua/user/autocommands.lua b/lua/user/autocommands.lua
index 3eaed4f..c21983e 100644
--- a/lua/user/autocommands.lua
+++ b/lua/user/autocommands.lua
@@ -31,10 +31,55 @@ vim.api.nvim_create_autocmd({ "FileType" }, {
 
 vim.cmd "autocmd BufEnter * ++nested if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif"
 
+
+function sleep(n)
+  local t = os.clock()
+  while os.clock() - t <= n do
+    -- nothing
+  end
+end
+
+function set_pps(target)
+  -- vim.cmd 'Hi/Find -F #include "forest_controls.h"'
+
+  local file = io.open("cmake_pp.json", "r")
+  if not file then return nil end
+  local jsonString = file:read "*a"
+  file:close()
+
+  local json = require 'lunajson'
+  local t = json.decode(jsonString)
+  local items_c = #t["26w_CC_Driver"]
+
+
+
+
+  pcall(vim.cmd, 'sml#mode_on')
+  for i = 1, items_c do
+    --TODO 
+    -- 0. Get current file name 
+    -- 1. Get Current cursur location
+    -- 2. Move to top line with gg
+    -- 3. Enter sml#mode_on
+    -- 4. Move to start location 
+
+    pcall(vim.cmd, 't[target][i]["start"]')
+    pcall(vim.cmd, 'norm v')
+    sleep(.1)
+
+    -- pcall(vim.cmd, "Hi " .. "+ " .. "BRHYTHM_APP_DEF(rhythm_app, APP_CONFIG_FORCE_SEGMENTATION, APP_CONFIG_MIC_SIZE, ADH_RHYTHM_ENTRY);\n")
+    --pcall(vim.cmd, 't[target][i]["start"], t[target][i]["end"] ')
+    --print(vim.inspect(t[target][i]["code"]))
+  end
+end
+
+
+
 -- Fixes Autocomment
 vim.api.nvim_create_autocmd({ "BufWinEnter" }, {
   callback = function()
     vim.cmd "set formatoptions-=cro"
+    -- set_pps("26w_CC_Driver")
   end,
 })
 
diff --git a/lua/user/bufferline.lua b/lua/user/bufferline.lua
index 5f78afd..81c5e61 100644
--- a/lua/user/bufferline.lua
+++ b/lua/user/bufferline.lua
@@ -12,81 +12,81 @@ bufferline.setup {
   },
   highlights = {
     fill = {
-      guifg = { attribute = "fg", highlight = "#ff0000" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "fg", highlight = "#ff0000" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
     background = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
 
     buffer_visible = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
 
     close_button = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
     close_button_visible = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
 
     tab_selected = {
-      guifg = { attribute = "fg", highlight = "Normal" },
-      guibg = { attribute = "bg", highlight = "Normal" },
+      fg = { attribute = "fg", highlight = "Normal" },
+      bg = { attribute = "bg", highlight = "Normal" },
     },
     tab = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
     tab_close = {
-      guifg = { attribute = "fg", highlight = "TabLineSel" },
-      guibg = { attribute = "bg", highlight = "Normal" },
+      fg = { attribute = "fg", highlight = "TabLineSel" },
+      bg = { attribute = "bg", highlight = "Normal" },
     },
 
     duplicate_selected = {
-      guifg = { attribute = "fg", highlight = "TabLineSel" },
-      guibg = { attribute = "bg", highlight = "TabLineSel" },
-      gui = "italic",
+      fg = { attribute = "fg", highlight = "TabLineSel" },
+      bg = { attribute = "bg", highlight = "TabLineSel" },
+      italic = true,
     },
     duplicate_visible = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
-      gui = "italic",
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
+      italic = true,
     },
     duplicate = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
-      gui = "italic",
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
+      italic = true,
     },
 
     modified = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
     modified_selected = {
-      guifg = { attribute = "fg", highlight = "Normal" },
-      guibg = { attribute = "bg", highlight = "Normal" },
+      fg = { attribute = "fg", highlight = "Normal" },
+      bg = { attribute = "bg", highlight = "Normal" },
     },
     modified_visible = {
-      guifg = { attribute = "fg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "fg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
 
     separator = {
-      guifg = { attribute = "bg", highlight = "TabLine" },
-      guibg = { attribute = "bg", highlight = "TabLine" },
+      fg = { attribute = "bg", highlight = "TabLine" },
+      bg = { attribute = "bg", highlight = "TabLine" },
     },
     separator_selected = {
-      guifg = { attribute = "bg", highlight = "Normal" },
-      guibg = { attribute = "bg", highlight = "Normal" },
+      fg = { attribute = "bg", highlight = "Normal" },
+      bg = { attribute = "bg", highlight = "Normal" },
     },
     indicator_selected = {
-      guifg = { attribute = "fg", highlight = "LspDiagnosticsDefaultHint" },
-      guibg = { attribute = "bg", highlight = "Normal" },
+      fg = { attribute = "fg", highlight = "LspDiagnosticsDefaultHint" },
+      bg = { attribute = "bg", highlight = "Normal" },
     },
   },
 }
diff --git a/lua/user/colorscheme.lua b/lua/user/colorscheme.lua
index 5db0eb6..f047a08 100644
--- a/lua/user/colorscheme.lua
+++ b/lua/user/colorscheme.lua
@@ -1,4 +1,4 @@
-local colorscheme = "darkplus"
+local colorscheme = "solarized"
 
 local status_ok, _ = pcall(vim.cmd, "colorscheme " .. colorscheme)
 if not status_ok then
diff --git a/lua/user/dap.lua b/lua/user/dap.lua
index 2ee829e..38eec7c 100644
--- a/lua/user/dap.lua
+++ b/lua/user/dap.lua
@@ -19,22 +19,27 @@ dap_install.config("python", {})
 -- add other configs here
 
 dapui.setup {
-  sidebar = {
-    elements = {
-      {
-        id = "scopes",
-        size = 0.25, -- Can be float or integer > 1
+  layouts = {
+    {
+      elements = {
+        'scopes',
+        'breakpoints',
+        'stacks',
+        'watches',
       },
-      { id = "breakpoints", size = 0.25 },
+      size = 40,
+      position = 'left',
+    },
+    {
+      elements = {
+        'repl',
+        'console',
+      },
+      size = 10,
+      position = 'bottom',
     },
-    size = 40,
-    position = "right", -- Can be "left", "right", "top", "bottom"
-  },
-  tray = {
-    elements = {},
   },
 }
-
 vim.fn.sign_define("DapBreakpoint", { text = "", texthl = "DiagnosticSignError", linehl = "", numhl = "" })
 
 dap.listeners.after.event_initialized["dapui_config"] = function()
diff --git a/lua/user/keymaps.lua b/lua/user/keymaps.lua
index 7b9bddb..8441072 100644
--- a/lua/user/keymaps.lua
+++ b/lua/user/keymaps.lua
@@ -25,8 +25,8 @@ keymap("n", "<C-l>", "<C-w>l", opts)
 -- Resize with arrows
 keymap("n", "<C-Up>", ":resize -2<CR>", opts)
 keymap("n", "<C-Down>", ":resize +2<CR>", opts)
-keymap("n", "<C-Left>", ":vertical resize -2<CR>", opts)
-keymap("n", "<C-Right>", ":vertical resize +2<CR>", opts)
+keymap("n", "<C-Left>", ":vertical resize +2<CR>", opts)
+keymap("n", "<C-Right>", ":vertical resize -2<CR>", opts)
 
 -- Navigate buffers
 keymap("n", "<S-l>", ":bnext<CR>", opts)
@@ -54,6 +54,7 @@ keymap("v", ">", ">gv", opts)
 
 -- NvimTree
 keymap("n", "<leader>e", ":NvimTreeToggle<CR>", opts)
+keymap("n", "<leader>tr", ":NvimTreeRefresh<CR>", opts)
 
 -- Telescope
 keymap("n", "<leader>ff", ":Telescope find_files<CR>", opts)
diff --git a/lua/user/lsp/lsp-installer.lua b/lua/user/lsp/lsp-installer.lua
index 21af371..1df0de4 100644
--- a/lua/user/lsp/lsp-installer.lua
+++ b/lua/user/lsp/lsp-installer.lua
@@ -12,6 +12,7 @@ local servers = {
   "bashls",
   "jsonls",
   "yamlls",
+  "clangd"
 }
 
 lsp_installer.setup()
diff --git a/lua/user/nvim-tree.lua b/lua/user/nvim-tree.lua
index 8365d1b..1a41989 100644
--- a/lua/user/nvim-tree.lua
+++ b/lua/user/nvim-tree.lua
@@ -55,7 +55,6 @@ nvim_tree.setup {
   },
   view = {
     width = 30,
-    height = 30,
     side = "left",
     mappings = {
       list = {
diff --git a/lua/user/options.lua b/lua/user/options.lua
index 6d6ec3b..3b28f6c 100644
--- a/lua/user/options.lua
+++ b/lua/user/options.lua
@@ -11,7 +11,7 @@ vim.opt.pumheight = 10                          -- pop up menu height
 vim.opt.showmode = false                        -- we don't need to see things like -- INSERT -- anymore
 vim.opt.showtabline = 0                         -- always show tabs
 vim.opt.smartcase = true                        -- smart case
-vim.opt.smartindent = true                      -- make indenting smarter again
+vim.opt.smartindent = false                      -- make indenting smarter again
 vim.opt.splitbelow = true                       -- force all horizontal splits to go below current window
 vim.opt.splitright = true                       -- force all vertical splits to go to the right of current window
 vim.opt.swapfile = false                        -- creates a swapfile
@@ -22,7 +22,7 @@ vim.opt.updatetime = 300                        -- faster completion (4000ms def
 vim.opt.writebackup = false                     -- if a file is being edited by another program (or was written to file while editing with another program), it is not allowed to be edited
 vim.opt.expandtab = true                        -- convert tabs to spaces
 vim.opt.shiftwidth = 2                          -- the number of spaces inserted for each indentation
-vim.opt.tabstop = 2                             -- insert 2 spaces for a tab
+vim.opt.tabstop = 4                             -- insert 2 spaces for a tab
 vim.opt.cursorline = true                       -- highlight the current line
 vim.opt.number = true                           -- set numbered lines
 vim.opt.laststatus = 3
@@ -38,3 +38,4 @@ vim.opt.fillchars.eob=" "
 vim.opt.shortmess:append "c"
 vim.opt.whichwrap:append("<,>,[,],h,l")
 vim.opt.iskeyword:append("-")
+vim.opt.relativenumber = true
diff --git a/lua/user/plugins.lua b/lua/user/plugins.lua
index 7735639..d5f5b7f 100644
--- a/lua/user/plugins.lua
+++ b/lua/user/plugins.lua
@@ -41,60 +41,71 @@ packer.init {
 -- Install your plugins here
 return packer.startup(function(use)
   -- My plugins here
-  use { "wbthomason/packer.nvim", commit = "00ec5adef58c5ff9a07f11f45903b9dbbaa1b422" } -- Have packer manage itself
-  use { "nvim-lua/plenary.nvim", commit = "968a4b9afec0c633bc369662e78f8c5db0eba249" } -- Useful lua functions used by lots of plugins
-  use { "windwp/nvim-autopairs", commit = "fa6876f832ea1b71801c4e481d8feca9a36215ec" } -- Autopairs, integrates with both cmp and treesitter
-  use { "numToStr/Comment.nvim", commit = "2c26a00f32b190390b664e56e32fd5347613b9e2" }
-  use { "JoosepAlviste/nvim-ts-context-commentstring", commit = "88343753dbe81c227a1c1fd2c8d764afb8d36269" }
-  use { "kyazdani42/nvim-web-devicons", commit = "8d2c5337f0a2d0a17de8e751876eeb192b32310e" }
-  use { "kyazdani42/nvim-tree.lua", commit = "bdb6d4a25410da35bbf7ce0dbdaa8d60432bc243" }
-  use { "akinsho/bufferline.nvim", commit = "c78b3ecf9539a719828bca82fc7ddb9b3ba0c353" }
-  use { "moll/vim-bbye", commit = "25ef93ac5a87526111f43e5110675032dbcacf56" }
-  use { "nvim-lualine/lualine.nvim", commit = "3362b28f917acc37538b1047f187ff1b5645ecdd" }
-  use { "akinsho/toggleterm.nvim", commit = "aaeed9e02167c5e8f00f25156895a6fd95403af8" }
-  use { "ahmedkhalf/project.nvim", commit = "541115e762764bc44d7d3bf501b6e367842d3d4f" }
-  use { "lewis6991/impatient.nvim", commit = "969f2c5c90457612c09cf2a13fee1adaa986d350" }
-  use { "lukas-reineke/indent-blankline.nvim", commit = "6177a59552e35dfb69e1493fd68194e673dc3ee2" }
-  use { "goolord/alpha-nvim", commit = "ef27a59e5b4d7b1c2fe1950da3fe5b1c5f3b4c94" }
+  use { "wbthomason/packer.nvim"} -- Have packer manage itself
+  use { "nvim-lua/plenary.nvim"} -- Useful lua functions used by lots of plugins
+  use { "windwp/nvim-autopairs"} -- Autopairs, integrates with both cmp and treesitter
+  use { "numToStr/Comment.nvim"}
+  use { "JoosepAlviste/nvim-ts-context-commentstring"}
+  use { "kyazdani42/nvim-web-devicons"}
+  use { "kyazdani42/nvim-tree.lua" }
+  use { "akinsho/bufferline.nvim"}
+  use { "moll/vim-bbye"}
+  use { "nvim-lualine/lualine.nvim"}
+  use { "akinsho/toggleterm.nvim"}
+  use { "ahmedkhalf/project.nvim"}
+  use { "lewis6991/impatient.nvim"}
+  use { "lukas-reineke/indent-blankline.nvim"}
+  use { "goolord/alpha-nvim"}
 
   -- Colorschemes
-  use { "folke/tokyonight.nvim", commit = "8223c970677e4d88c9b6b6d81bda23daf11062bb" }
-  use { "lunarvim/darkplus.nvim", commit = "2584cdeefc078351a79073322eb7f14d7fbb1835" }
+  use { "folke/tokyonight.nvim"}
+  use { "lunarvim/darkplus.nvim"}
+  use { "shaunsingh/moonlight.nvim" }
+  use { "Mofiqul/dracula.nvim" }
+  use { "ishan9299/nvim-solarized-lua" }
+  use { "rebelot/kanagawa.nvim" }
 
   -- cmp plugins
-  use { "hrsh7th/nvim-cmp", commit = "df6734aa018d6feb4d76ba6bda94b1aeac2b378a" } -- The completion plugin
-  use { "hrsh7th/cmp-buffer", commit = "62fc67a2b0205136bc3e312664624ba2ab4a9323" } -- buffer completions
-  use { "hrsh7th/cmp-path", commit = "466b6b8270f7ba89abd59f402c73f63c7331ff6e" } -- path completions
-  use { "saadparwaiz1/cmp_luasnip", commit = "a9de941bcbda508d0a45d28ae366bb3f08db2e36" } -- snippet completions
-  use { "hrsh7th/cmp-nvim-lsp", commit = "affe808a5c56b71630f17aa7c38e15c59fd648a8" }
-  use { "hrsh7th/cmp-nvim-lua", commit = "d276254e7198ab7d00f117e88e223b4bd8c02d21" }
+  use { "hrsh7th/nvim-cmp"} -- The completion plugin
+  use { "hrsh7th/cmp-buffer"} -- buffer completions
+  use { "hrsh7th/cmp-path"} -- path completions
+  use { "saadparwaiz1/cmp_luasnip"} -- snippet completions
+  use { "hrsh7th/cmp-nvim-lsp"}
+  use { "hrsh7th/cmp-nvim-lua"}
 
   -- snippets
-  use { "L3MON4D3/LuaSnip", commit = "79b2019c68a2ff5ae4d732d50746c901dd45603a" } --snippet engine
-  use { "rafamadriz/friendly-snippets", commit = "d27a83a363e61009278b6598703a763ce9c8e617" } -- a bunch of snippets to use
+  use { "L3MON4D3/LuaSnip"} --snippet engine
+  use { "rafamadriz/friendly-snippets"} -- a bunch of snippets to use
 
   -- LSP
-  use { "neovim/nvim-lspconfig", commit = "148c99bd09b44cf3605151a06869f6b4d4c24455" } -- enable LSP
-  use { "williamboman/nvim-lsp-installer", commit = "e9f13d7acaa60aff91c58b923002228668c8c9e6" } -- simple to use language server installer
-  use { "jose-elias-alvarez/null-ls.nvim", commit = "ff40739e5be6581899b43385997e39eecdbf9465" } -- for formatters and linters
-  use { "RRethy/vim-illuminate", commit = "c82e6d04f27a41d7fdcad9be0bce5bb59fcb78e5" }
-
+  use { "neovim/nvim-lspconfig"} -- enable LSP
+  use { "williamboman/nvim-lsp-installer"} -- simple to use language server installer
+  use { "jose-elias-alvarez/null-ls.nvim"} -- for formatters and linters
+  use { "RRethy/vim-illuminate"}
+  
   -- Telescope
-  use { "nvim-telescope/telescope.nvim", commit = "d96eaa914aab6cfc4adccb34af421bdd496468b0" }
+  use { "nvim-telescope/telescope.nvim"}
 
   -- Treesitter
-  use {
-    "nvim-treesitter/nvim-treesitter",
-    commit = "518e27589c0463af15463c9d675c65e464efc2fe",
-  }
+  use { "nvim-treesitter/nvim-treesitter"}
+  use { 'nvim-treesitter/nvim-treesitter-context'}
+  -- Symantic Highlighting
+--  use { "neoclide/coc.nvim" }
+--  use { "jackguo380/vim-lsp-cxx-highlight" }
+--  use { "mphe/grayout.vim" }
 
+  -- cmake
+  use { "Shatur/neovim-cmake" }
+-- use { "winston0410/cmd-parser.nvim" }
+ -- use { "winston0410/range-highlight.nvim" }
+ -- use { "Rasukarusan/nvim-select-multi-line" }
   -- Git
-  use { "lewis6991/gitsigns.nvim", commit = "c18e016864c92ecf9775abea1baaa161c28082c3" }
+  use { "lewis6991/gitsigns.nvim"}
 
   -- DAP
-  use { "mfussenegger/nvim-dap", commit = "014ebd53612cfd42ac8c131e6cec7c194572f21d" }
-  use { "rcarriga/nvim-dap-ui", commit = "d76d6594374fb54abf2d94d6a320f3fd6e9bb2f7" }
-  use { "ravenxrz/DAPInstall.nvim", commit = "8798b4c36d33723e7bba6ed6e2c202f84bb300de" }
+  use { "mfussenegger/nvim-dap"}
+  use { "rcarriga/nvim-dap-ui"}
+  use { "ravenxrz/DAPInstall.nvim"}
 
   -- Automatically set up your configuration after cloning packer.nvim
   -- Put this at the end after all plugins
diff --git a/lua/user/telescope.lua b/lua/user/telescope.lua
index 33f8102..7b8f112 100644
--- a/lua/user/telescope.lua
+++ b/lua/user/telescope.lua
@@ -11,7 +11,7 @@ telescope.setup {
     prompt_prefix = " ",
     selection_caret = " ",
     path_display = { "smart" },
-    file_ignore_patterns = { ".git/", "node_modules" },
+    file_ignore_patterns = { ".git/", "node_modules", ".ld", ".emProject", "segger_rtt", ".uvprojx", ".uvoptx", ".eww", ".icf", ".ewp", ".ewd", ".sct", ".emSession", ".xml", ".hex"},
 
     mappings = {
       i = {
